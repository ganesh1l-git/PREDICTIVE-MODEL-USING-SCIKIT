import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Load the SMS spam collection dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/00228/smsspamcollection.zip"
df = pd.read_csv(url, sep='\t', header=None, names=['label', 'message'])
print("Dataset preview:")
print(df.head())
# Convert labels to binary (spam=1, ham=0)
df['label'] = df['label'].map({'ham': 0, 'spam': 1})
# Split the dataset into features (X) and labels (y)
X = df['message']
y = df['label']
vectorizer = CountVectorizer(stop_words='english')
X_vectorized = vectorizer.fit_transform(X)
X_train, X_test, y_train, y_test = train_test_split(X_vectorized, y, test_size=0.2, random_state=42)

print("\nTraining data shape:", X_train.shape)
print("Testing data shape:", X_test.shape)

model = MultinomialNB()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("\nAccuracy:", accuracy)

conf_matrix = confusion_matrix(y_test, y_pred)
print("\nConfusion Matrix:")
print(conf_matrix)
report = classification_report(y_test, y_pred)
print("\nClassification Report:")
print(report)

new_messages = ["Free money now!", "Hey, how are you doing today?"]

new_messages_vectorized = vectorizer.transform(new_messages)

predictions = model.predict(new_messages_vectorized)

print("\nPrediction for new messages:")
for msg, pred in zip(new_messages, predictions):
    print(f"Message: {msg}")
    print("Prediction: Spam" if pred == 1 else "Prediction: Ham")
    print()
